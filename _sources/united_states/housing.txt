

.. Housing:

Housing
===========================================================================

What type of housing exists and how do people live in it?

.. contents::
   :local:
   :depth: 10





.. _us.census.acs.B11001001:

Households
---------------------------------------------------------------------------


.. figure:: ../img/us.census.acs.B11001001.png
  :width: 100 %
  :align: center


A count of the number of households in each geography. A household consists of one or more people who live in the same dwelling and also share at meals or living accommodation, and may consist of a single family or some other grouping of people. 





Measure "Households"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B11001001'
      );





Measure "Households" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B11001001'
        );













.. contents:: Subcolumns of Households
   :local:
   :depth: 1

  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  






.. _us.census.acs.B25001001:

Housing Units
---------------------------------------------------------------------------


.. figure:: ../img/us.census.acs.B25001001.png
  :width: 100 %
  :align: center


A count of housing units in each geography.  A housing unit is a house, an apartment, a mobile home or trailer, a group of rooms, or a single room occupied as separate living quarters, or if vacant, intended for occupancy as separate living quarters.





Measure "Housing Units"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25001001'
      );





Measure "Housing Units" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25001001'
        );













.. contents:: Subcolumns of Housing Units
   :local:
   :depth: 1

  
  
  
  
  
  
  
  
  
  
  

.. _us.census.acs.B25034010:

Housing units built before 1939
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. figure:: ../img/us.census.acs.B25034010.png
  :width: 100 %
  :align: center


A house, an apartment, a mobile home or trailer, a group of rooms, or a single room occupied as separate living quarters, or if vacant, intended for occupancy as separate living quarters built in 1939 or earlier.





Measure "Housing units built before 1939"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25034010'
      );





Measure "Housing units built before 1939" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25034010'
        );






Measure "Housing units built before 1939" percent of "Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25034010',
        'denominator'
      );


Measure "Housing units built before 1939" percent of "Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25034010',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25001001`



  
  
  
  

.. _us.census.acs.B25034003:

Housing units built between 2000 and 2004
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. figure:: ../img/us.census.acs.B25034003.png
  :width: 100 %
  :align: center


A house, an apartment, a mobile home or trailer, a group of rooms, or a single room occupied as separate living quarters, or if vacant, intended for occupancy as separate living quarters built from 2000 to 2004.





Measure "Housing units built between 2000 and 2004"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25034003'
      );





Measure "Housing units built between 2000 and 2004" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25034003'
        );






Measure "Housing units built between 2000 and 2004" percent of "Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25034003',
        'denominator'
      );


Measure "Housing units built between 2000 and 2004" percent of "Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25034003',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25001001`



  
  
  
  

.. _us.census.acs.B25034002:

Housing units built in 2005 or later
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. figure:: ../img/us.census.acs.B25034002.png
  :width: 100 %
  :align: center


A house, an apartment, a mobile home or trailer, a group of rooms, or a single room occupied as separate living quarters, or if vacant, intended for occupancy as separate living quarters built in 2005 or later.





Measure "Housing units built in 2005 or later"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25034002'
      );





Measure "Housing units built in 2005 or later" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25034002'
        );






Measure "Housing units built in 2005 or later" percent of "Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25034002',
        'denominator'
      );


Measure "Housing units built in 2005 or later" percent of "Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25034002',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25001001`



  
  
  
  

.. _us.census.acs.B25024010:

Mobile homes
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. figure:: ../img/us.census.acs.B25024010.png
  :width: 100 %
  :align: center


A manufactured home is defined as a movable dwelling, 8 feet or more wide and 40 feet or more long, designed to be towed on its own chassis, with transportation gear integral to the unit when it leaves the factory, and without need of a permanent foundation. These homes are built in accordance with the U.S. Department of Housing and Urban Development (HUD) building code.





Measure "Mobile homes"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25024010'
      );





Measure "Mobile homes" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25024010'
        );






Measure "Mobile homes" percent of "Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25024010',
        'denominator'
      );


Measure "Mobile homes" percent of "Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25024010',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25001001`



  
  
  
  
  
  

.. _us.census.acs.B25075001:

Owner-occupied Housing Units
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. figure:: ../img/us.census.acs.B25075001.png
  :width: 100 %
  :align: center








Measure "Owner-occupied Housing Units"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25075001'
      );





Measure "Owner-occupied Housing Units" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25075001'
        );






Measure "Owner-occupied Housing Units" percent of "Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25075001',
        'denominator'
      );


Measure "Owner-occupied Housing Units" percent of "Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25075001',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25001001`



.. contents:: Subcolumns of Owner-occupied Housing Units
   :local:
   :depth: 1

  
  
  

.. _us.census.acs.B25075025:

Owner-occupied Housing Units valued at $1,000,000 or more.
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


.. figure:: ../img/us.census.acs.B25075025.png
  :width: 100 %
  :align: center


The count of owner occupied housing units in a geographic area that are valued at $1,000,000 or more.  Value is the respondent's estimate of how much the property (house and lot, mobile home and lot, or condominium unit) would sell for if it were for sale.





Measure "Owner-occupied Housing Units valued at $1,000,000 or more."  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25075025'
      );





Measure "Owner-occupied Housing Units valued at $1,000,000 or more." within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25075025'
        );






Measure "Owner-occupied Housing Units valued at $1,000,000 or more." percent of "Owner-occupied Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25075025',
        'denominator'
      );


Measure "Owner-occupied Housing Units valued at $1,000,000 or more." percent of "Owner-occupied Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25075025',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25075001`



  
  
  
  

.. _us.census.acs.B25081002:

Owner-occupied Housing Units with a Mortgage
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


.. figure:: ../img/us.census.acs.B25081002.png
  :width: 100 %
  :align: center


The count of housing units within a geographic area that are mortagaged. "Mortgage" refers to all forms of debt where the property is pledged as security for repayment of the debt, including deeds of trust, trust deed, contracts to purchase, land contracts, junior mortgages, and home equity loans.





Measure "Owner-occupied Housing Units with a Mortgage"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25081002'
      );





Measure "Owner-occupied Housing Units with a Mortgage" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25081002'
        );






Measure "Owner-occupied Housing Units with a Mortgage" percent of "Owner-occupied Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25081002',
        'denominator'
      );


Measure "Owner-occupied Housing Units with a Mortgage" percent of "Owner-occupied Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25081002',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25075001`



  
  

  
  
  
  

.. _us.census.acs.B25003001:

Renter occupied housing units
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. figure:: ../img/us.census.acs.B25003001.png
  :width: 100 %
  :align: center


A housing unit is classified as occupied if it is the usual place of residence of the person or group of people living in it at the time of enumeration.





Measure "Renter occupied housing units"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25003001'
      );





Measure "Renter occupied housing units" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25003001'
        );






Measure "Renter occupied housing units" percent of "Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25003001',
        'denominator'
      );


Measure "Renter occupied housing units" percent of "Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25003001',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25001001`



.. contents:: Subcolumns of Renter occupied housing units
   :local:
   :depth: 1

  
  
  

.. _us.census.acs.B25003003:

Renter occupied housing units
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


.. figure:: ../img/us.census.acs.B25003003.png
  :width: 100 %
  :align: center


All occupied units which are not owner occupied, whether they are rented for cash rent or occupied without payment of cash rent, are classified as renter-occupied.





Measure "Renter occupied housing units"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25003003'
      );





Measure "Renter occupied housing units" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25003003'
        );






Measure "Renter occupied housing units" percent of "Renter occupied housing units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25003003',
        'denominator'
      );


Measure "Renter occupied housing units" percent of "Renter occupied housing units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25003003',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25003001`



  
  

  
  
  
  
  
  
  
  
  
  

.. _us.census.acs.B25002003:

Vacant Housing Units
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


.. figure:: ../img/us.census.acs.B25002003.png
  :width: 100 %
  :align: center


The count of vacant housing units in a geographic area. A housing unit is vacant if no one is living in it at the time of enumeration, unless its occupants are only temporarily absent. Units temporarily occupied at the time of enumeration entirely by people who have a usual residence elsewhere are also classified as vacant.





Measure "Vacant Housing Units"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25002003'
      );





Measure "Vacant Housing Units" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25002003'
        );






Measure "Vacant Housing Units" percent of "Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25002003',
        'denominator'
      );


Measure "Vacant Housing Units" percent of "Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25002003',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25001001`



.. contents:: Subcolumns of Vacant Housing Units
   :local:
   :depth: 1

  
  
  

.. _us.census.acs.B25004002:

Vacant Housing Units for Rent
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


.. figure:: ../img/us.census.acs.B25004002.png
  :width: 100 %
  :align: center


The count of vacant housing units in a geographic area that are for rent. A housing unit is vacant if no one is living in it at the time of enumeration, unless its occupants are only temporarily absent. Units temporarily occupied at the time of enumeration entirely by people who have a usual residence elsewhere are also classified as vacant.





Measure "Vacant Housing Units for Rent"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25004002'
      );





Measure "Vacant Housing Units for Rent" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25004002'
        );






Measure "Vacant Housing Units for Rent" percent of "Vacant Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25004002',
        'denominator'
      );


Measure "Vacant Housing Units for Rent" percent of "Vacant Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25004002',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25002003`



  
  
  
  

.. _us.census.acs.B25004004:

Vacant Housing Units for Sale
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


.. figure:: ../img/us.census.acs.B25004004.png
  :width: 100 %
  :align: center


The count of vacant housing units in a geographic area that are for sale. A housing unit is vacant if no one is living in it at the time of enumeration, unless its occupants are only temporarily absent. Units temporarily occupied at the time of enumeration entirely by people who have a usual residence elsewhere are also classified as vacant.





Measure "Vacant Housing Units for Sale"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25004004'
      );





Measure "Vacant Housing Units for Sale" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B25004004'
        );






Measure "Vacant Housing Units for Sale" percent of "Vacant Housing Units" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25004004',
        'denominator'
      );


Measure "Vacant Housing Units for Sale" percent of "Vacant Housing Units" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B25004004',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B25002003`



  
  

  
  






.. _us.census.acs.B07204007:

Lived in a different house one year ago in a different city
---------------------------------------------------------------------------


.. figure:: ../img/us.census.acs.B07204007.png
  :width: 100 %
  :align: center


All people in a geographic area who lived in a different city within the year prior to the survey.





Measure "Lived in a different house one year ago in a different city"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B07204007'
      );





Measure "Lived in a different house one year ago in a different city" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B07204007'
        );






Measure "Lived in a different house one year ago in a different city" percent of "Population 1 year and over" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B07204007',
        'denominator'
      );


Measure "Lived in a different house one year ago in a different city" percent of "Population 1 year and over" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B07204007',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B07204001`








.. _us.census.acs.B07204004:

Lived in a different house one year ago in the same city
---------------------------------------------------------------------------


.. figure:: ../img/us.census.acs.B07204004.png
  :width: 100 %
  :align: center


All people in a geographic area who lived in the same city but moved to a different unit within the year prior to the survey.





Measure "Lived in a different house one year ago in the same city"  density per sq. kilometer  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B07204004'
      );





Measure "Lived in a different house one year ago in the same city" within an area:

.. code-block:: postgresql

    UPDATE {table_name}
      SET {new_numeric_column} =
        OBS_GetMeasure(
          ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
          'us.census.acs.B07204004'
        );






Measure "Lived in a different house one year ago in the same city" percent of "Population 1 year and over" at one point:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B07204004',
        'denominator'
      );


Measure "Lived in a different house one year ago in the same city" percent of "Population 1 year and over" within an area:

.. code-block:: postgresql

  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        ST_Buffer(CDB_LatLng(40.7, -73.9), 0.01),
        'us.census.acs.B07204004',
        'denominator'
      );









:denominator:

    :ref:`us.census.acs.B07204001`








.. _us.census.acs.B25058001:

Median Rent
---------------------------------------------------------------------------


.. figure:: ../img/us.census.acs.B25058001.png
  :width: 100 %
  :align: center


The median contract rent within a geographic area. The contract rent is the monthly rent agreed to or contracted for, regardless of any furnishings, utilities, fees, meals, or services that may be included. For vacant units, it is the monthly rent asked for the rental unit at the time of interview.





Measure "Median Rent"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25058001'
      );






Median Rent is only available for point lookups.

















.. _us.zillow.AllHomes_MedianRentalPricePerSqft:

Median rental price per square foot for All homes
---------------------------------------------------------------------------


.. figure:: ../img/us.zillow.AllHomes_MedianRentalPricePerSqft.png
  :width: 100 %
  :align: center


Median of the value (US Dollars) of all homes per square foot. This number is calculated by taking the estimated home value for each home in a given region and dividing it by the home's square footage. Zillow defines all homes as single-family, condominium and co-operative homes with a county record. Unless specified, all series cover this segment of the housing stock.





Measure "Median rental price per square foot for All homes"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(28.3305906291771, -81.3544048197256),
        'us.zillow.AllHomes_MedianRentalPricePerSqft'
      );






Median rental price per square foot for All homes is only available for point lookups.

















.. _us.zillow.Sfr_MedianRentalPricePerSqft:

Median rental price per square foot for Single Family residence rental
---------------------------------------------------------------------------


.. figure:: ../img/us.zillow.Sfr_MedianRentalPricePerSqft.png
  :width: 100 %
  :align: center


Median of the value (US Dollars) of all homes per square foot. This number is calculated by taking the estimated home value for each home in a given region and dividing it by the home's square footage. Single family residences are detached, free-standing residential buildings. 





Measure "Median rental price per square foot for Single Family residence rental"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(28.3305906291771, -81.3544048197256),
        'us.zillow.Sfr_MedianRentalPricePerSqft'
      );






Median rental price per square foot for Single Family residence rental is only available for point lookups.

















.. _us.zillow.AllHomes_MedianValuePerSqft:

Median value per square foot for All homes
---------------------------------------------------------------------------


.. figure:: ../img/us.zillow.AllHomes_MedianValuePerSqft.png
  :width: 100 %
  :align: center


Median of the estimated monthly rent price (US Dollars) of all homes, per square foot. This is calculated by taking the estimated rent price for a home and dividing it by the homes square footage. Zillow defines all homes as single-family, condominium and co-operative homes with a county record. Unless specified, all series cover this segment of the housing stock.





Measure "Median value per square foot for All homes"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(28.3305906291771, -81.3544048197256),
        'us.zillow.AllHomes_MedianValuePerSqft'
      );






Median value per square foot for All homes is only available for point lookups.

















.. _us.census.acs.B25077001:

Owner-Occupied Housing Units Median Value
---------------------------------------------------------------------------


.. figure:: ../img/us.census.acs.B25077001.png
  :width: 100 %
  :align: center


The middle value (median) in a geographic area owner occupied housing units.





Measure "Owner-Occupied Housing Units Median Value"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25077001'
      );






Owner-Occupied Housing Units Median Value is only available for point lookups.

















.. _us.census.acs.B25071001:

Percent of Household Income Spent on Rent
---------------------------------------------------------------------------


.. figure:: ../img/us.census.acs.B25071001.png
  :width: 100 %
  :align: center


Within a geographic area, the median percentage of household income which was spent on gross rent.  Gross rent is the amount of the contract rent plus the estimated average monthly cost of utilities (electricity, gas, water, sewer etc.) and fuels (oil, coal, wood, etc.) if these are paid by the renter.  Household income is the sum of the income of all people 15 years and older living in the household.





Measure "Percent of Household Income Spent on Rent"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(40.7, -73.9),
        'us.census.acs.B25071001'
      );






Percent of Household Income Spent on Rent is only available for point lookups.

















.. _us.zillow.AllHomes_Zhvi:

Zillow Home Value Index for All homes
---------------------------------------------------------------------------


.. figure:: ../img/us.zillow.AllHomes_Zhvi.png
  :width: 100 %
  :align: center


The Zillow Home Value Index (ZHVI) is a time series tracking the monthly median home value (in US Dollars) in a particular geographical region. In general, each ZHVI time series begins in April 1996. See `Zillow's methodology <http://www.zillow.com/research/zhvi-methodology-6032/>`_ for more information. Zillow defines all homes as single-family, condominium and co-operative homes with a county record. Unless specified, all series cover this segment of the housing stock.





Measure "Zillow Home Value Index for All homes"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(28.3305906291771, -81.3544048197256),
        'us.zillow.AllHomes_Zhvi'
      );






Zillow Home Value Index for All homes is only available for point lookups.

















.. _us.zillow.SingleFamilyResidence_Zhvi:

Zillow Home Value Index for Single Family Homes
---------------------------------------------------------------------------


.. figure:: ../img/us.zillow.SingleFamilyResidence_Zhvi.png
  :width: 100 %
  :align: center


The Zillow Home Value Index (ZHVI) is a time series tracking the monthly median home value (in US Dollars) in a particular geographical region. In general, each ZHVI time series begins in April 1996. See `Zillow's methodology <http://www.zillow.com/research/zhvi-methodology-6032/>`_ for more information. Single family residences are detached, free-standing residential buildings. 





Measure "Zillow Home Value Index for Single Family Homes"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(28.3305906291771, -81.3544048197256),
        'us.zillow.SingleFamilyResidence_Zhvi'
      );






Zillow Home Value Index for Single Family Homes is only available for point lookups.

















.. _us.zillow.AllHomesPlusMultifamily_Zri:

Zillow Rental Index for All homes plus multifamily
---------------------------------------------------------------------------


.. figure:: ../img/us.zillow.AllHomesPlusMultifamily_Zri.png
  :width: 100 %
  :align: center


Similar to Zillow's ZHVI, the Zillow Rent Index (ZRI) tracks the monthly median rent (in US Dollars) in different geographical regions. In general, each ZRI time series beginds in November, 2010.  See `Zillow's methodology <http://www.zillow.com/research/zillow-rent-index-methodology-2393/>`_ for more information. In addition to "All homes", which Zillow defines as single-family, condominium and co-operative homes with a county record, this group includes units in buildings with 5 or more housing units that are not a condominiums or co-ops.





Measure "Zillow Rental Index for All homes plus multifamily"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(28.3305906291771, -81.3544048197256),
        'us.zillow.AllHomesPlusMultifamily_Zri'
      );






Zillow Rental Index for All homes plus multifamily is only available for point lookups.

















.. _us.zillow.SingleFamilyResidenceRental_Zri:

Zillow Rental Index for Single Family residence rental
---------------------------------------------------------------------------


.. figure:: ../img/us.zillow.SingleFamilyResidenceRental_Zri.png
  :width: 100 %
  :align: center


Similar to Zillow's ZHVI, the Zillow Rent Index (ZRI) tracks the monthly median rent (in US Dollars) in different geographical regions. In general, each ZRI time series beginds in November, 2010.  See `Zillow's methodology <http://www.zillow.com/research/zillow-rent-index-methodology-2393/>`_ for more information. Single Family residence rental is defined as detached, free-standing residential buildings which are rented out.





Measure "Zillow Rental Index for Single Family residence rental"  for one point:


.. code-block:: postgresql


  




  UPDATE {table_name}
    SET {new_numeric_column} =
      OBS_GetMeasure(
        CDB_LatLng(28.3305906291771, -81.3544048197256),
        'us.zillow.SingleFamilyResidenceRental_Zri'
      );






Zillow Rental Index for Single Family residence rental is only available for point lookups.













